trying to create strategy directly for (!b_0 & !b_1 & G((b_0 & !(f_0 & serve)) -> Xb_0) & G((b_1 & !(f_1 & serve)) -> Xb_1) & G((b_0 & f_0 & serve) -> X!b_0) & G((b_1 & f_1 & serve) -> X!b_1)) -> (f_0 & G(!(down & up) & ((f_0 & up) -> b_1) & ((down & f_1) -> (b_0 | (!b_0 & !b_1))) & ((f_0 & serve) -> b_0) & ((f_1 & serve) -> b_1) & (up <-> (f_0 & Xf_1)) & (down <-> (f_1 & Xf_0)) & (f_0 -> X(f_0 | f_1)) & (f_1 -> X(f_0 | f_1))) & G(b_0 -> F(f_0 & serve)) & G(b_1 -> F(f_1 & serve)) & !FG(!b_0 & !b_1 & !f_0))
direct strategy might exist but was not found.
translating formula done in 0.0069749 seconds
automaton has 21 states and 3 colors
split inputs and outputs done in 0.000216675 seconds
automaton has 63 states
determinization done
DPA has 59 states, 2 colors
simplification done
DPA has 60 states
determinization and simplification took 0.00648804 seconds
solving game with acceptance: generalized-Streett 1 1
game solved in 8.696e-05 seconds
simplification took 0.000195506 seconds
AIG circuit was created in 0.000273534 seconds and has 3 latches and 42 gates

real	0m0.040s
user	0m0.016s
sys	0m0.012s
