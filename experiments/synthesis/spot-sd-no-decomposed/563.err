trying to create strategy directly for (!b_0 & !b_1 & G((b_0 & !(!f_0 & serve)) -> Xb_0) & G((b_1 & !(f_0 & serve)) -> Xb_1) & G((b_0 & !f_0 & serve) -> X!b_0) & G((b_1 & f_0 & serve) -> X!b_1)) -> (!f_0 & G(!(down & up) & ((!f_0 & up) -> b_1) & ((down & f_0) -> (b_0 | (!b_0 & !b_1))) & ((!f_0 & serve) -> b_0) & ((f_0 & serve) -> b_1) & (up <-> (!f_0 & Xf_0)) & (down <-> (f_0 & X!f_0)) & (!f_0 -> X(f_0 | !f_0)) & (f_0 -> X(f_0 | !f_0))) & G(b_0 -> F(!f_0 & serve)) & G(b_1 -> F(f_0 & serve)) & !FG(!b_0 & !b_1 & f_0))
direct strategy might exist but was not found.
translating formula done in 0.00396417 seconds
automaton has 15 states and 3 colors
split inputs and outputs done in 0.000185935 seconds
automaton has 42 states
determinization done
DPA has 41 states, 2 colors
simplification done
DPA has 42 states
determinization and simplification took 0.00319172 seconds
solving game with acceptance: generalized-Streett 1 1
game solved in 6.5677e-05 seconds
simplification took 0.000192653 seconds
AIG circuit was created in 0.00012183 seconds and has 2 latches and 27 gates

real	0m0.021s
user	0m0.009s
sys	0m0.011s
