trying to create strategy directly for (!hburst0 & !hburst1 & !hbusreq0 & !hbusreq1 & !hlock0 & !hlock1 & !hready) -> (!busreq & decide & hgrant0 & !hgrant1 & !hmaster0 & !hmastlock & !locked & start & !statea1_0 & !statea1_1 & !stateg2 & !stateg3_0 & !stateg3_1 & !stateg3_2 & !stateg10_1 & ((G((hlock0 -> hbusreq0) & (hlock1 -> hbusreq1)) & GF!statea1_1 & GFhready) -> (G((!hmaster0 -> (busreq <-> hbusreq0)) & (hmaster0 -> (busreq <-> hbusreq1)) & !(start & stateg2) & !(start & stateg3_0 & !stateg3_1 & !stateg3_2) & !(start & !stateg3_0 & stateg3_1 & !stateg3_2) & !(start & stateg3_0 & stateg3_1 & !stateg3_2) & !(start & !stateg3_0 & !stateg3_1 & stateg3_2) & !(!hbusreq1 & hgrant1 & stateg10_1) & ((!statea1_0 & !statea1_1 & (hburst0 | hburst1 | !hmastlock)) -> X(!statea1_0 & !statea1_1)) & ((!hburst0 & !hburst1 & hmastlock & !statea1_0 & !statea1_1) -> X(!statea1_0 & statea1_1)) & ((busreq & !statea1_0 & statea1_1) -> X(!statea1_0 & statea1_1)) & ((!busreq & !statea1_0 & statea1_1 & (hburst0 | hburst1 | !hmastlock)) -> X(!statea1_0 & !statea1_1)) & ((!busreq & !hburst0 & !hburst1 & hmastlock & !statea1_0 & statea1_1) -> X(statea1_0 & !statea1_1)) & ((busreq & statea1_0 & !statea1_1) -> X(!statea1_0 & statea1_1)) & ((!hburst0 & !hburst1 & hmastlock & statea1_0 & !statea1_1) -> X(!statea1_0 & statea1_1)) & ((!busreq & statea1_0 & !statea1_1 & (hburst0 | hburst1 | !hmastlock)) -> X(!statea1_0 & !statea1_1)) & (!hready -> X!start) & ((!stateg2 & (hburst0 | hburst1 | !hmastlock | !start)) -> X!stateg2) & ((!hburst0 & !hburst1 & hmastlock & start & !stateg2) -> Xstateg2) & ((busreq & !start & stateg2) -> Xstateg2) & ((!busreq & !start & stateg2) -> X!stateg2) & ((!stateg3_0 & !stateg3_1 & !stateg3_2 & (hburst0 | !hburst1 | !hmastlock | !start)) -> (X!stateg3_0 & X!stateg3_1 & X!stateg3_2)) & ((!hburst0 & hburst1 & hmastlock & !hready & start & !stateg3_0 & !stateg3_1 & !stateg3_2) -> (X!stateg3_1 & X!stateg3_2 & Xstateg3_0)) & ((!hburst0 & hburst1 & hmastlock & hready & start & !stateg3_0 & !stateg3_1 & !stateg3_2) -> (X!stateg3_0 & X!stateg3_2 & Xstateg3_1)) & ((!hready & !start & stateg3_0 & !stateg3_1 & !stateg3_2) -> (X!stateg3_1 & X!stateg3_2 & Xstateg3_0)) & ((hready & !start & stateg3_0 & !stateg3_1 & !stateg3_2) -> (X!stateg3_0 & X!stateg3_2 & Xstateg3_1)) & ((!hready & !start & !stateg3_0 & stateg3_1 & !stateg3_2) -> (X!stateg3_0 & X!stateg3_2 & Xstateg3_1)) & ((hready & !start & !stateg3_0 & stateg3_1 & !stateg3_2) -> (X!stateg3_2 & Xstateg3_0 & Xstateg3_1)) & ((!hready & !start & stateg3_0 & stateg3_1 & !stateg3_2) -> (X!stateg3_2 & Xstateg3_0 & Xstateg3_1)) & ((hready & !start & stateg3_0 & stateg3_1 & !stateg3_2) -> (X!stateg3_0 & X!stateg3_1 & Xstateg3_2)) & ((!hready & !start & !stateg3_0 & !stateg3_1 & stateg3_2) -> (X!stateg3_0 & X!stateg3_1 & Xstateg3_2)) & ((hready & !start & !stateg3_0 & !stateg3_1 & stateg3_2) -> (X!stateg3_0 & X!stateg3_1 & X!stateg3_2)) & (hready -> (hgrant0 <-> X!hmaster0)) & (hready -> (hgrant1 <-> Xhmaster0)) & (hready -> (!locked <-> X!hmastlock)) & (X!start -> (!hmaster0 <-> X!hmaster0)) & (X!start -> (hmaster0 <-> Xhmaster0)) & (X!start -> (hmastlock <-> Xhmastlock)) & ((decide & !hlock0 & Xhgrant0) -> X!locked) & ((decide & !hlock1 & Xhgrant1) -> X!locked) & (!decide -> (!hgrant0 <-> X!hgrant0)) & (!decide -> (!hgrant1 <-> X!hgrant1)) & (!decide -> (!locked <-> X!locked)) & ((!stateg10_1 & (hbusreq1 | hgrant1)) -> X!stateg10_1) & ((!hbusreq1 & !hgrant1 & !stateg10_1) -> Xstateg10_1) & ((!hbusreq1 & !hgrant1 & stateg10_1) -> Xstateg10_1) & ((hbusreq1 & stateg10_1) -> X!stateg10_1) & ((decide & !hbusreq0 & !hbusreq1) -> Xhgrant0)) & GF(!hbusreq0 | !hmaster0) & GF(!hbusreq1 | hmaster0))))
direct strategy might exist but was not found.
translating formula done in 47.6495 seconds
automaton has 1141 states and 2 colors
split inputs and outputs done in 0.596966 seconds
automaton has 37208 states
/usr/bin/bash: line 1: 1815385 Killed                  timeout 15m ltlsynt --algo=sd --aiger --decompose=no --verbose --ins="hburst1,hburst0,hlock1,hbusreq1,hlock0,hbusreq0,hready" --outs="stateg10_1,stateg3_2,stateg3_1,stateg3_0,stateg2,statea1_1,statea1_0,busreq,hgrant1,hgrant0,locked,decide,start,hmastlock,hmaster0" --formula="((((((((! (hready)) && (! (hbusreq0))) && (! (hlock0))) && (! (hbusreq1))) && (! (hlock1))) && (! (hburst0))) && (! (hburst1))) -> ((((((((((((((((! (hmaster0)) && (! (hmastlock))) && (start)) && (decide)) && (! (locked))) && (hgrant0)) && (! (hgrant1))) && (! (busreq))) && (! (statea1_0))) && (! (statea1_1))) && (! (stateg2))) && (! (stateg3_0))) && (! (stateg3_1))) && (! (stateg3_2))) && (! (stateg10_1))) && ((((G (((hlock0) -> (hbusreq0)) && ((hlock1) -> (hbusreq1)))) && (G (F (! (statea1_1))))) && (G (F (hready)))) -> (((G (((((((((((((((((((((((((((((((((((((((((((((((((((! (hmaster0)) -> ((hbusreq0) <-> (busreq))) && ((hmaster0) -> ((hbusreq1) <-> (busreq)))) && ((((! (statea1_1)) && (! (statea1_0))) && (((! (hmastlock)) || (hburst0)) || (hburst1))) -> (X ((! (statea1_1)) && (! (statea1_0)))))) && ((((((! (statea1_1)) && (! (statea1_0))) && (hmastlock)) && (! (hburst0))) && (! (hburst1))) -> (X ((statea1_1) && (! (statea1_0)))))) && ((((statea1_1) && (! (statea1_0))) && (busreq)) -> (X ((statea1_1) && (! (statea1_0)))))) && (((((statea1_1) && (! (statea1_0))) && (! (busreq))) && (((! (hmastlock)) || (hburst0)) || (hburst1))) -> (X ((! (statea1_1)) && (! (statea1_0)))))) && (((((((statea1_1) && (! (statea1_0))) && (! (busreq))) && (hmastlock)) && (! (hburst0))) && (! (hburst1))) -> (X ((! (statea1_1)) && (statea1_0))))) && ((((! (statea1_1)) && (statea1_0)) && (busreq)) -> (X ((statea1_1) && (! (statea1_0)))))) && ((((((! (statea1_1)) && (statea1_0)) && (hmastlock)) && (! (hburst0))) && (! (hburst1))) -> (X ((statea1_1) && (! (statea1_0)))))) && (((((! (statea1_1)) && (statea1_0)) && (! (busreq))) && (((! (hmastlock)) || (hburst0)) || (hburst1))) -> (X ((! (statea1_1)) && (! (statea1_0)))))) && ((! (hready)) -> (X (! (start))))) && (((! (stateg2)) && ((((! (hmastlock)) || (! (start))) || (hburst0)) || (hburst1))) -> (X (! (stateg2))))) && ((((((! (stateg2)) && (hmastlock)) && (start)) && (! (hburst0))) && (! (hburst1))) -> (X (stateg2)))) && ((((stateg2) && (! (start))) && (busreq)) -> (X (stateg2)))) && (! ((stateg2) && (start)))) && ((((stateg2) && (! (start))) && (! (busreq))) -> (X (! (stateg2))))) && (((((! (stateg3_0)) && (! (stateg3_1))) && (! (stateg3_2))) && (((! (hmastlock)) || (! (start))) || ((hburst0) || (! (hburst1))))) -> (((X (! (stateg3_0))) && (X (! (stateg3_1)))) && (X (! (stateg3_2)))))) && (((((! (stateg3_0)) && (! (stateg3_1))) && (! (stateg3_2))) && ((((hmastlock) && (start)) && ((! (hburst0)) && (hburst1))) && (! (hready)))) -> (((X (stateg3_0)) && (X (! (stateg3_1)))) && (X (! (stateg3_2)))))) && (((((! (stateg3_0)) && (! (stateg3_1))) && (! (stateg3_2))) && ((((hmastlock) && (start)) && ((! (hburst0)) && (hburst1))) && (hready))) -> (((X (! (stateg3_0))) && (X (stateg3_1))) && (X (! (stateg3_2)))))) && (((((stateg3_0) && (! (stateg3_1))) && (! (stateg3_2))) && ((! (start)) && (! (hready)))) -> (((X (stateg3_0)) && (X (! (stateg3_1)))) && (X (! (stateg3_2)))))) && (((((stateg3_0) && (! (stateg3_1))) && (! (stateg3_2))) && ((! (start)) && (hready))) -> (((X (! (stateg3_0))) && (X (stateg3_1))) && (X (! (stateg3_2)))))) && (! ((((stateg3_0) && (! (stateg3_1))) && (! (stateg3_2))) && (start)))) && (((((! (stateg3_0)) && (stateg3_1)) && (! (stateg3_2))) && ((! (start)) && (! (hready)))) -> (((X (! (stateg3_0))) && (X (stateg3_1))) && (X (! (stateg3_2)))))) && (((((! (stateg3_0)) && (stateg3_1)) && (! (stateg3_2))) && ((! (start)) && (hready))) -> (((X (stateg3_0)) && (X (stateg3_1))) && (X (! (stateg3_2)))))) && (! ((((! (stateg3_0)) && (stateg3_1)) && (! (stateg3_2))) && (start)))) && (((((stateg3_0) && (stateg3_1)) && (! (stateg3_2))) && ((! (start)) && (! (hready)))) -> (((X (stateg3_0)) && (X (stateg3_1))) && (X (! (stateg3_2)))))) && (((((stateg3_0) && (stateg3_1)) && (! (stateg3_2))) && ((! (start)) && (hready))) -> (((X (! (stateg3_0))) && (X (! (stateg3_1)))) && (X (stateg3_2))))) && (! ((((stateg3_0) && (stateg3_1)) && (! (stateg3_2))) && (start)))) && (((((! (stateg3_0)) && (! (stateg3_1))) && (stateg3_2)) && ((! (start)) && (! (hready)))) -> (((X (! (stateg3_0))) && (X (! (stateg3_1)))) && (X (stateg3_2))))) && (((((! (stateg3_0)) && (! (stateg3_1))) && (stateg3_2)) && ((! (start)) && (hready))) -> (((X (! (stateg3_0))) && (X (! (stateg3_1)))) && (X (! (stateg3_2)))))) && (! ((((! (stateg3_0)) && (! (stateg3_1))) && (stateg3_2)) && (start)))) && ((hready) -> ((hgrant0) <-> (X (! (hmaster0)))))) && ((hready) -> ((hgrant1) <-> (X (hmaster0))))) && ((hready) -> ((! (locked)) <-> (X (! (hmastlock)))))) && ((X (! (start))) -> ((! (hmaster0)) <-> (X (! (hmaster0)))))) && ((X (! (start))) -> ((hmaster0) <-> (X (hmaster0))))) && ((X (! (start))) -> ((hmastlock) <-> (X (hmastlock))))) && ((((decide) && (! (hlock0))) && (X (hgrant0))) -> (X (! (locked))))) && ((((decide) && (! (hlock0))) && (X (hgrant0))) -> (X (! (locked))))) && ((((decide) && (! (hlock1))) && (X (hgrant1))) -> (X (! (locked))))) && ((((decide) && (! (hlock1))) && (X (hgrant1))) -> (X (! (locked))))) && ((! (decide)) -> ((! (hgrant0)) <-> (X (! (hgrant0)))))) && ((! (decide)) -> ((! (hgrant1)) <-> (X (! (hgrant1)))))) && ((! (decide)) -> ((! (locked)) <-> (X (! (locked)))))) && (((! (stateg10_1)) && ((hgrant1) || (hbusreq1))) -> (X (! (stateg10_1))))) && (((! (stateg10_1)) && ((! (hgrant1)) && (! (hbusreq1)))) -> (X (stateg10_1)))) && (((stateg10_1) && ((! (hgrant1)) && (! (hbusreq1)))) -> (X (stateg10_1)))) && (! ((stateg10_1) && ((hgrant1) && (! (hbusreq1)))))) && (((stateg10_1) && (hbusreq1)) -> (X (! (stateg10_1))))) && ((((decide) && (! (hbusreq0))) && (! (hbusreq1))) -> (X (hgrant0))))) && (G (F ((! (hmaster0)) || (! (hbusreq0)))))) && (G (F ((hmaster0) || (! (hbusreq1)))))))))"

real	9m53.503s
user	9m49.266s
sys	0m1.385s
slurmstepd: error: Detected 1 oom-kill event(s) in StepId=90966.0. Some of your processes may have been killed by the cgroup out-of-memory handler.
srun: error: cn08: task 0: Out Of Memory
